// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sol.Galaxy.Data.Contexts;

#nullable disable

namespace Sol.Galaxy.Data.Migrations
{
    [DbContext(typeof(VentasContext))]
    partial class VentasContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Sol.Galaxy.Data.Entities.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<int>("CustomerTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaActualiza")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaIngresa")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("UsuarioActualiza")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioIngresa")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerId");

                    b.HasIndex("CustomerTypeId");

                    b.ToTable("Customer", "DBO");
                });

            modelBuilder.Entity("Sol.Galaxy.Data.Entities.CustomerType", b =>
                {
                    b.Property<int>("CustomerTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerTypeId"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaActualiza")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaIngresa")
                        .HasColumnType("datetime2");

                    b.Property<string>("UsuarioActualiza")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioIngresa")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerTypeId");

                    b.ToTable("CustomerType");
                });

            modelBuilder.Entity("Sol.Galaxy.Data.Entities.Invoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(12,2)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaActualiza")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaIngresa")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UsuarioActualiza")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioIngresa")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Invoice", "DBO");
                });

            modelBuilder.Entity("Sol.Galaxy.Data.Entities.Option", b =>
                {
                    b.Property<int>("OptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OptionId"));

                    b.Property<DateTime>("FechaActualiza")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaIngresa")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("UsuarioActualiza")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioIngresa")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OptionId");

                    b.ToTable("Option", "DBO");
                });

            modelBuilder.Entity("Sol.Galaxy.Data.Entities.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProductCode");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(12,2)");

                    b.Property<DateTime>("FechaActualiza")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaIngresa")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(12,2)");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("ProductDescripcion");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioActualiza")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioIngresa")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductId");

                    b.ToTable("Products", "DBO");
                });

            modelBuilder.Entity("Sol.Galaxy.Data.Entities.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateTime>("FechaActualiza")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaIngresa")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("UserPassword")
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("UserRol")
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("UsuarioActualiza")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioIngresa")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("User", "DBO");
                });

            modelBuilder.Entity("Sol.Galaxy.Data.Entities.UserOption", b =>
                {
                    b.Property<int>("UserOptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserOptionId"));

                    b.Property<DateTime>("FechaActualiza")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaIngresa")
                        .HasColumnType("datetime2");

                    b.Property<int>("OptionId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioActualiza")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioIngresa")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserOptionId");

                    b.HasIndex("OptionId");

                    b.HasIndex("UserId");

                    b.ToTable("UserOption", "DBO");
                });

            modelBuilder.Entity("Sol.Galaxy.Data.Entities.Customer", b =>
                {
                    b.HasOne("Sol.Galaxy.Data.Entities.CustomerType", "CustomerType")
                        .WithMany("Customer")
                        .HasForeignKey("CustomerTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CustomerType");
                });

            modelBuilder.Entity("Sol.Galaxy.Data.Entities.Invoice", b =>
                {
                    b.HasOne("Sol.Galaxy.Data.Entities.Customer", "Customer")
                        .WithMany("Invoices")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Sol.Galaxy.Data.Entities.UserOption", b =>
                {
                    b.HasOne("Sol.Galaxy.Data.Entities.Option", "Option")
                        .WithMany("UserOption")
                        .HasForeignKey("OptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sol.Galaxy.Data.Entities.User", "User")
                        .WithMany("UserOption")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Option");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Sol.Galaxy.Data.Entities.Customer", b =>
                {
                    b.Navigation("Invoices");
                });

            modelBuilder.Entity("Sol.Galaxy.Data.Entities.CustomerType", b =>
                {
                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Sol.Galaxy.Data.Entities.Option", b =>
                {
                    b.Navigation("UserOption");
                });

            modelBuilder.Entity("Sol.Galaxy.Data.Entities.User", b =>
                {
                    b.Navigation("UserOption");
                });
#pragma warning restore 612, 618
        }
    }
}
